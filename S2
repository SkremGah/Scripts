--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\159\141","\126\177\163\187\69\134\219\167"),function(v42) if (v9(v42,2)==(166 -(36 + 51))) then local v102=0 -0 ;local v103;while true do if (v102==0) then v103=0 -0 ;while true do if (v103==0) then local v136=0 + 0 ;local v137;while true do if (v136==(0 + 0)) then v137=0 -0 ;while true do if (v137==(0 + 0)) then local v168=0 + 0 ;while true do if (v168==(0 + 0)) then local v179=0;while true do if (v179==(1096 -(709 + 387))) then v30=v8(v11(v42,1859 -(673 + 1185) ,2 -1 ));return "";end end end end end end break;end end end end break;end end else local v104=0;local v105;local v106;local v107;while true do if (v104==(0 -0)) then v105=0 -0 ;v106=nil;v104=1 + 0 ;end if (v104==(1 + 0)) then v107=nil;while true do if (v105==1) then while true do if (v106==(0 -0)) then v107=v10(v8(v42,4 + 12 ));if v30 then local v165=0 -0 ;local v166;while true do if (v165==(1 -0)) then return v166;end if (v165==(1880 -(446 + 1434))) then local v175=0;local v176;while true do if (v175==0) then v176=1283 -(1040 + 243) ;while true do if (v176==(2 -1)) then v165=1;break;end if (v176==(1847 -(559 + 1288))) then v166=v13(v107,v30);v30=nil;v176=1932 -(609 + 1322) ;end end break;end end end end else return v107;end break;end end break;end if (v105==(454 -(13 + 441))) then local v138=0;while true do if (v138==(0 -0)) then v106=0 -0 ;v107=nil;v138=4 -3 ;end if ((1 + 0)==v138) then v105=1;break;end end end end break;end end end end);local function v31(v43,v44,v45) if v45 then local v108=0 -0 ;local v109;while true do if (v108==(0 + 0)) then v109=(v43/(2^(v44-(1 + 0))))%(((14 -9) -(2 + 1))^(((v45-((3 -1) -(1 + 0))) -(v44-((1 + 0) -0))) + (2 -(1 + 0)))) ;return v109-(v109%1) ;end end else local v110=0 + 0 ;local v111;local v112;local v113;while true do if ((0 + 0)==v110) then local v123=433 -(153 + 280) ;while true do if (v123==(2 -1)) then v110=1 + 0 ;break;end if (v123==(0 + 0)) then v111=0;v112=nil;v123=1;end end end if (v110==(1 + 0)) then v113=nil;while true do if (v111==(1 + 0)) then while true do if (v112==((449 + 170) -(555 + (96 -32)))) then local v156=0 + 0 ;while true do if (v156==0) then v113=(933 -((1524 -(89 + 578)) + 74))^(v44-((407 + 162) -(((2586 -1342) -(282 + (1644 -(572 + 477)))) + 201))) ;return (((v43%(v113 + v113))>=v113) and ((126 + 802) -(129 + 85 + 86 + 627))) or ((1637 -(1523 + 114)) + (86 -(84 + 2))) ;end end end end break;end if ((0 -0)==v111) then v112=0 + 0 + (842 -(497 + 345)) ;v113=nil;v111=1;end end break;end end end end local function v32() local v46=0;local v47;while true do local v84=0;while true do if (v84==0) then if (v46==(1 + 0)) then return v47;end if (v46==(0 + 0)) then v47=v9(v27,v29,v29);v29=v29 + (1334 -(605 + 728)) ;v46=1 + 0 ;end break;end end end end local function v33() local v48=0;local v49;local v50;local v51;while true do if (v48==(0 -0)) then v49=0 + 0 + (0 -0) ;v50=nil;v48=1 + 0 ;end if (v48==(2 -1)) then v51=nil;while true do local v117=0 + 0 ;while true do if (v117==0) then if (v49==((490 -(457 + 32)) -(0 + 0 + 0))) then return (v51 * ((2723 -(832 + 570)) -(65 + 3 + 260 + 737))) + v50 ;end if (v49==(1270 -((799 -573) + 1044))) then local v142=0 + 0 ;while true do if (v142==(797 -(588 + 208))) then v49=(2 -1) + (1800 -(884 + 916)) ;break;end if (v142==0) then v50,v51=v9(v27,v29,v29 + ((16 -8) -(4 + 2)) );v29=v29 + (119 -((685 -(232 + 421)) + 85)) ;v142=1;end end end break;end end end break;end end end local function v34() local v52=1889 -(1569 + 320) ;local v53;local v54;local v55;local v56;local v57;while true do if (v52==(0 + 0)) then local v114=0 + 0 ;while true do if (0==v114) then v53=(3224 -2267) -(((2794 -(316 + 289)) -(3394 -2097)) + 4 + 61) ;v54=nil;v114=1;end if (v114==(1454 -(666 + 787))) then v52=426 -(360 + 65) ;break;end end end if (v52==(1 + 0)) then v55=nil;v56=nil;v52=256 -(79 + 175) ;end if (v52==(2 -0)) then v57=nil;while true do local v118=0;local v119;while true do if (v118==(0 + 0)) then v119=0;while true do if (v119==0) then if (v53==((5 -3) -(1 -0))) then return (v57 * 16777216) + (v56 * ((122037 -(503 + 396)) -55602)) + (v55 * (437 -(92 + 89))) + v54 ;end if (v53==((0 -0) -0)) then local v159=0 + 0 ;local v160;while true do if (v159==(0 + 0)) then v160=0;while true do if (v160==(3 -2)) then v53=((1 + 2) -(4 -2)) + 0 + 0 ;break;end if (v160==0) then v54,v55,v56,v57=v9(v27,v29,v29 + (353 -(87 + 93 + 101 + (209 -140))) );v29=v29 + ((23 + 161) -(67 + 113)) ;v160=1;end end break;end end end break;end end break;end end end break;end end end local function v35() local v58=0 -(0 -0) ;local v59;local v60;local v61;local v62;local v63;local v64;while true do local v85=1244 -(485 + 759) ;while true do if (v85==(2 -1)) then if (v58==((1189 -(442 + 747)) + (1135 -(832 + 303)))) then local v126=946 -(88 + 858) ;while true do if (v126==(0 + 0)) then v59=v34();v60=v34();v126=1 + 0 ;end if (v126==1) then v58=1;break;end end end if (v58==((1 + 9) -(796 -(766 + 23)))) then local v127=0;local v128;while true do if (v127==(0 -0)) then v128=0 -0 ;while true do if (v128==(0 -0)) then if (v63==0) then if (v62==((0 -0) -(1073 -(1036 + 37)))) then return v64 * (0 + 0 + (0 -0)) ;else local v177=0 + 0 ;local v178;while true do if ((1480 -(641 + 839))==v177) then v178=(913 -(910 + 3)) -(0 -0) ;while true do if (v178==((2475 -(1466 + 218)) -(170 + 198 + (1571 -(556 + 592))))) then v63=1 + 0 + (808 -(329 + 479)) ;v61=(854 -(174 + 680)) + ((0 -0) -(0 -0)) ;break;end end break;end end end elseif (v63==((2094 + 838) -(261 + 624))) then return ((v62==((739 -(396 + 343)) -(0 + 0 + (1477 -(29 + 1448))))) and (v64 * (((2470 -(135 + 1254)) -(1020 + (226 -166)))/((84 -66) -(6 + 2 + 2 + (1535 -(389 + 1138))))))) or (v64 * NaN) ;end return v16(v64,v63-((4508 -(102 + 472)) -(2748 + 163)) ) * (v61 + (v62/((9 -7)^(494 -(231 + 185 + 26))))) ;end end break;end end end break;end if (v85==(0 + 0)) then if (v58==((2498 -(320 + 1225)) -((1427 -625) + 92 + 58))) then v61=((1470 -(157 + 1307)) -4) -1 ;v62=(v31(v60,((4045 -(821 + 1038)) -((1896 -1136) + 108 + 879)) -((257 -112) + 293) ,36 -16 ) * ((1488 -(372 + 626 + ((5950 -3549) -(1789 + 124))))^((1050 -(834 + 192)) + 1 + 7))) + v59 ;v58=1 + 1 ;end if (v58==((257 + 742) -(20 + 895 + (126 -44)))) then local v129=0;while true do if (1==v129) then v58=(310 -(300 + 4)) -(1 + 2) ;break;end if (v129==(0 -0)) then v63=v31(v60,59 -(400 -(112 + 250)) ,((313 + 472) -((1866 -1121) + 21)) + 12 );v64=((v31(v60,19 + 13 )==((1 + 0) -(0 + 0 + 0 + 0))) and  -(((2428 + 840) -(3494 -(1001 + 413))) -(1069 + 118))) or ((4 -2) -(883 -(244 + 638))) ;v129=694 -(627 + 66) ;end end end v85=1;end end end end local function v36(v65) local v66=0 -0 ;local v67;local v68;while true do local v86=0;while true do if (v86==1) then if ((604 -(512 + 90))==v66) then v68={};for v130=(1907 -(1665 + 241)) + (717 -(373 + 344)) , #v67 do v68[v130]=v10(v9(v11(v67,v130,v130)));end v66=3;end if ((0 + 0)==v66) then v67=nil;if  not v65 then local v139=0;local v140;while true do if (v139==(0 + 0)) then v140=0 -0 ;while true do if (v140==(0 -0)) then v65=v34();if (v65==((2154 -(35 + 1064)) -(64 + 23 + (2070 -1102)))) then return "";end break;end end break;end end end v66=1 + 0 ;end break;end if (v86==0) then if (v66==(1239 -(298 + 938))) then return v14(v68);end if (v66==(1260 -(233 + 1026))) then v67=v11(v27,v29,(v29 + v65) -(((1674 -(636 + 1030)) -(3 + 1)) -(1416 -(437 + 10 + 966))) );v29=v29 + v65 ;v66=2;end v86=1 + 0 ;end end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v69=0 + 0 ;local v70;local v71;local v72;local v73;local v74;local v75;local v76;local v77;while true do if (v69==(222 -(55 + 166))) then local v115=0;while true do if (v115==(1 + 0)) then v69=1 + 1 ;break;end if (v115==(0 -0)) then v72=(function() return;end)();v73=(function() return;end)();v115=1;end end end if (v69==0) then v70=(function() return (1848 -(36 + 261)) -(226 + (2316 -991)) ;end)();v71=(function() return;end)();v69=1369 -(34 + 1334) ;end if ((2 + 2)==v69) then while true do local v120=(function() return 1500 -(1408 + 92) ;end)();while true do if (v120~=(0 + 0)) then else if (v70==(1 + 0)) then v75=(function() return {v72,v73,nil,v74};end)();v76=(function() return v34();end)();v77=(function() return {};end)();for v147= #"/",v76 do local v148=0;local v149;local v150;local v151;local v152;while true do if (v148==(2 + 0)) then while true do if (v149==(320 -(134 + 185))) then v152=(function() return nil;end)();while true do if (v150==((1133 -(549 + 584)) + (685 -(314 + 371)))) then local v182=(function() return (0 -0) -0 ;end)();while true do if (v182==((969 -(478 + 490)) + 0 + 0)) then v150=(function() return 1173 -(786 + 386) ;end)();break;end if (v182==(0 -0)) then local v252=1379 -(1055 + 324) ;local v253;while true do if (v252==0) then v253=1340 -(1093 + 247) ;while true do if (v253==(0 + 0)) then v151=(function() return v32();end)();v152=(function() return nil;end)();v253=1;end if (v253==1) then v182=(function() return (1 + 0) -(0 -0) ;end)();break;end end break;end end end end end if (v150==((3 -2) + (0 -0))) then if (v151== #"}") then v152=(function() return v32()~=((0 -0) + 0 + 0) ;end)();elseif (v151==(7 -5)) then v152=(function() return v35();end)();elseif (v151~= #v7("\110\156\115","\156\67\173\74\165")) then else v152=(function() return v36();end)();end v77[v147]=(function() return v152;end)();break;end end break;end if (v149==((0 -0) + 0)) then v150=(function() return 0 + 0 ;end)();v151=(function() return nil;end)();v149=(function() return 2 -1 ;end)();end end break;end if ((689 -(364 + 324))==v148) then v151=(function() return;end)();v152=(function() return;end)();v148=5 -3 ;end if (v148==(0 -0)) then local v167=0 + 0 ;while true do if (v167==(0 -0)) then v149=(function() return (0 -0) + (0 -0) ;end)();v150=(function() return;end)();v167=1;end if ((1269 -(1249 + 19))==v167) then v148=1;break;end end end end end v70=(function() return 1638 -(1240 + 133 + (1023 -760)) ;end)();end if (v70==(1088 -(686 + 400))) then v75[ #v7("\51\191\72","\38\84\215\41\118\220\70")]=(function() return v32();end)();for v153= #" ",v34() do local v154=(function() return v32();end)();if (v31(v154, #">", #"[")~=((785 + 215) -((680 -(73 + 156)) + 3 + 546))) then else local v161=(function() return (1340 -(721 + 90)) -(406 + 2 + 121) ;end)();local v162=(function() return;end)();local v163=(function() return;end)();local v164=(function() return;end)();while true do if (v161==((5746 -3976) -((2219 -(224 + 246)) + 20))) then local v169=(function() return (0 -0) + (0 -0) ;end)();while true do if (v169~=(1 + 0 + 0 + 0)) then else v161=(function() return 2 + 0 ;end)();break;end if (v169~=(1322 -((2482 -1233) + (242 -169)))) then else v164=(function() return {v33(),v33(),nil,nil};end)();if (v162==((0 + 0) -0)) then local v184=1534 -(709 + 825) ;local v185;local v186;local v187;while true do if (v184==(0 -0)) then v185=0;v186=nil;v184=1 -0 ;end if (v184==(865 -(196 + 668))) then v187=nil;while true do if (v185==(0 -0)) then local v447=0 -0 ;while true do if (v447==(834 -(171 + 662))) then v185=94 -(4 + 89) ;break;end if (v447==(0 -0)) then v186=(function() return 0 -(0 + 0) ;end)();v187=(function() return;end)();v447=1;end end end if (v185==(4 -3)) then while true do if (v186~=(0 -0)) then else v187=(function() return 0 + 0 ;end)();while true do if (v187~=((1486 -(35 + 1451)) -(1453 -(28 + 1425)))) then else v164[ #v7("\9\71\106","\158\48\118\66\114")]=(function() return v33();end)();v164[ #v7("\170\55\20\103","\155\203\68\112\86\19\197")]=(function() return v33();end)();break;end end break;end end break;end end break;end end elseif (v162== #" ") then v164[ #v7("\31\140\126","\152\38\189\86\156\32\24\133")]=(function() return v34();end)();elseif (v162==(1386 -((2739 -(941 + 1052)) + 612 + 26))) then v164[ #v7("\177\6\254","\38\156\55\199")]=(function() return v34() -(((1515 -(822 + 692)) + (1 -0))^16) ;end)();elseif (v162~= #v7("\175\117\125","\35\200\29\28\72\115\20\154")) then else local v448=0 + 0 ;local v449;local v450;while true do if (v448==(298 -(45 + 252))) then while true do if (v449==((0 + 0) -(0 + 0))) then v450=(function() return 0;end)();while true do if (v450==((829 -488) -((651 -(114 + 319)) + (175 -52)))) then v164[ #v7("\1\167\201","\84\121\223\177\191\237\76")]=(function() return v34() -(((2027 -444) -(979 + 556 + (68 -22)))^(33 -17)) ;end)();v164[ #v7("\163\88\209\184","\161\219\54\169\192\90\48\80")]=(function() return v33();end)();break;end end break;end end break;end if (v448==0) then local v509=1963 -(556 + 1407) ;while true do if (v509==1) then v448=1207 -(741 + 465) ;break;end if ((465 -(170 + 295))==v509) then v449=(function() return 0 + 0 + 0 ;end)();v450=(function() return;end)();v509=1 + 0 ;end end end end end v169=(function() return (2 -1) + 0 + 0 ;end)();end end end if (v161==(0 + 0 + 0)) then local v170=0;local v171;while true do if (v170==0) then v171=(function() return 0 + 0 ;end)();while true do if (v171==((1790 -(957 + 273)) -(82 + 224 + 102 + 152))) then local v247=0;while true do if ((0 -0)==v247) then v162=(function() return v31(v154,(2 -1) + (2 -1) , #v7("\16\19\72","\69\41\34\96"));end)();v163=(function() return v31(v154, #v7("\236\155\132\92","\75\220\163\183\106\98"),(54 -43) -(1785 -(389 + 1391)) );end)();v247=1;end if (v247==(1 + 0)) then v171=(function() return 1 + 0 ;end)();break;end end end if (v171~=(2 -1)) then else v161=(function() return 1468 -((1850 -(783 + 168)) + 568) ;end)();break;end end break;end end end if (v161==((6 -4) + 1 + 0)) then if (v31(v163, #v7("\12\179\135","\185\98\218\235\87"), #v7("\146\109\111","\202\171\92\71\134\190"))~= #".") then else v164[ #v7("\40\210\40\217","\232\73\161\76")]=(function() return v77[v164[ #v7("\235\138\19\14","\126\219\185\34\61")]];end)();end v72[v153]=(function() return v164;end)();break;end if (v161==(4 -(313 -(309 + 2)))) then local v173=0 -0 ;local v174;while true do if (v173==(1212 -(1090 + 122))) then v174=0;while true do if (v174==(1 + 0)) then v161=(function() return (19 -13) -(3 + 0) ;end)();break;end if (v174==(1118 -(628 + 490))) then if (v31(v163, #".", #"/")== #">") then v164[(109 + 496) -((663 -395) + (1530 -1195)) ]=(function() return v77[v164[(1066 -(431 + 343)) -((121 -61) + (665 -435)) ]];end)();end if (v31(v163,(454 + 120) -(426 + 19 + 127) ,1 + (1696 -(556 + 1139)) )~= #":") then else v164[ #v7("\11\198\95","\135\108\174\62\18\30\23\147")]=(function() return v77[v164[ #v7("\177\225\43","\167\214\137\74\171\120\206\83")]];end)();end v174=16 -(6 + 9) ;end end break;end end end end end end for v155= #".",v34() do v73,v155,v39=(function() return v71(v73,v155,v39);end)();end return v75;end v120=(function() return (267 + 1190) -(145 + 137 + (1343 -(28 + 141))) ;end)();end if (v120~=((315 + 497) -(569 + (298 -56)))) then else if (v70==((0 + 0) -(1317 -(486 + 831)))) then local v144=0 -0 ;local v145;local v146;while true do if (v144==(0 -0)) then v145=(function() return 0 + 0 + 0 ;end)();v146=(function() return;end)();v144=3 -2 ;end if (v144==(1264 -(668 + 595))) then while true do if (v145~=(0 -(0 + 0))) then else v146=(function() return 0 + 0 ;end)();while true do if (v146==(1024 -((1925 -1219) + 318))) then local v181=290 -(23 + 267) ;while true do if (v181==1) then v146=(function() return 1 -0 ;end)();break;end if (v181==0) then v71=(function() return function(v391,v392,v393) local v394=1944 -(1129 + 815) ;local v395;local v396;while true do if (v394==(387 -(371 + 16))) then v395=(function() return (3001 -(1326 + 424)) -((1365 -644) + 530) ;end)();v396=(function() return;end)();v394=3 -2 ;end if (v394==1) then while true do if (v395~=(118 -(88 + 30))) then else v396=(function() return (771 -(720 + 51)) -(0 -0) ;end)();while true do if (v396~=0) then else local v561=0;local v562;local v563;while true do if (v561==(1777 -(421 + 1355))) then while true do if (v562==((0 -0) + 0 + 0)) then v563=(function() return (2354 -(286 + 797)) -((3454 -2509) + 326) ;end)();while true do if (v563==((0 -0) -(439 -(397 + 42)))) then local v634=0;local v635;while true do if (v634==(0 + 0)) then v635=(function() return 0;end)();while true do if (v635==((800 -(24 + 776)) + 0)) then local v643=0 -0 ;local v644;while true do if (v643==0) then v644=0;while true do if (v644==(785 -(222 + 563))) then v391[v392-#"]" ]=(function() return v393();end)();return v391,v392,v393;end end break;end end end end break;end end end end break;end end break;end if (v561==0) then v562=(function() return (0 -0) + 0 + 0 ;end)();v563=(function() return;end)();v561=1;end end end end break;end end break;end end end;end)();v72=(function() return {};end)();v181=191 -(23 + 167) ;end end end if (v146==(67 -((1828 -(690 + 1108)) + 13 + 22))) then v70=(function() return (579 + 122) -((1119 -(40 + 808)) + 71 + 358) ;end)();break;end if (v146~=(3 -2)) then else v73=(function() return {};end)();v74=(function() return {};end)();v146=(function() return 1259 -(1043 + 205 + 9) ;end)();end end break;end end break;end end end break;end end end break;end if (v69==(2 + 0)) then v74=(function() return;end)();v75=(function() return;end)();v69=2 + 1 ;end if (v69==(574 -(47 + 524))) then local v116=0;while true do if (v116==1) then v69=4;break;end if (v116==0) then v76=(function() return;end)();v77=(function() return;end)();v116=1 + 0 ;end end end end end local function v40(v78,v79,v80) local v81=v78[(8 -5) -2 ];local v82=v78[((1525 -505) + (441 -247)) -((2043 -(1165 + 561)) + 6 + 27 + 862) ];local v83=v78[7 -(12 -8) ];return function(...) local v87=0 + 0 ;local v88;local v89;local v90;local v91;local v92;local v93;local v94;local v95;local v96;local v97;local v98;local v99;local v100;local v101;while true do if (v87==0) then local v121=479 -(341 + 138) ;while true do if (v121==1) then v90=v83;v87=1 + 0 ;break;end if (v121==0) then v88=v81;v89=v82;v121=1 -0 ;end end end if (v87==3) then v97={};v98={};for v124=413 -((341 -(89 + 237)) + (1280 -882)) ,v96 do if (v124>=v90) then v94[v124-v90 ]=v95[v124 + 1 ];else v98[v124]=v95[v124 + ((2069 -1086) -((899 -(581 + 300)) + (2184 -(855 + 365)))) ];end end v87=9 -5 ;end if (v87==1) then local v122=0 + 0 ;while true do if (v122==(1236 -(1030 + 205))) then v93= -(1 + 0);v87=2 + 0 ;break;end if (v122==0) then v91=v38;v92=((1300 -(156 + 130)) -((347 -194) + (471 -191))) -((739 -378) + 58 + 161) ;v122=1;end end end if (v87==2) then v94={};v95={...};v96=v20("#",...) -(1 + 0 + 0) ;v87=72 -(10 + 59) ;end if (v87==(2 + 3)) then while true do local v125=0 -0 ;while true do if ((((1166 -(671 + 492)) -2)==v125) or (324>(420 + 107))) then if ((v101<=(26 + 18)) or (4453<=1891)) then if (v101<=(1236 -(369 + 846))) then if (v101<=(7 + 1 + 2)) then if (v101<=(854 -(20 + 709 + 121))) then if ((v101<=((1946 -(1036 + 909)) + 0 + 0)) or ((5271 -2131)<(2332 -(11 + 192)))) then if (v101>(126 -(116 + 6 + 4))) then v98[v100[1 + (176 -(135 + 40)) ]]=v98[v100[741 -(542 + 196) ]][v100[(19 -11) -(3 + 1) ]];elseif (v100[4 -2 ]==v98[v100[(2 -0) + 2 + (176 -(50 + 126)) ]]) then v92=v92 + (2 -1) + 0 ;else v92=v100[1 + 1 + 1 ];end elseif (v101<=(4 -2)) then for v248=v100[2],v100[(1420 -(1233 + 180)) -((971 -(522 + 447)) + (1423 -(107 + 1314))) ] do v98[v248]=nil;end elseif (v101>(1554 -(590 + 249 + 287 + (1295 -870)))) then v98[v100[407 -(51 + 67 + (569 -282)) ]][v100[11 -8 ]]=v100[15 -11 ];else v98[v100[(3033 -(716 + 1194)) -(3 + 115 + 108 + 895) ]]=v98[v100[(511 -(74 + 429)) -(5 + (0 -0)) ]] + v100[(138 + 139 + (237 -133)) -(142 + 167 + 68) ] ;end elseif ((v101<=((95 -64) -(58 -34))) or ((2988 -(279 + 154))<(2018 -(454 + 324)))) then if ((v101<=(2 + 0 + (4 -1))) or (4727<=4722)) then v98[v100[(996 -(12 + 5)) -(553 + 229 + 195) ]]=v98[v100[(12 -7) -(1 + 1) ]][v100[(1097 -(277 + 816)) + (0 -0) ]];elseif (v101==((1189 -(1058 + 125)) + 0)) then local v259=0 + 0 ;local v260;local v261;while true do if (v259==(976 -(815 + 160))) then while true do if (v260==((0 -0) + (0 -0))) then v261=v100[1 + 1 + (0 -0) ];v98[v261]=v98[v261](v21(v98,v261 + ((1900 -(41 + 1857)) -1) ,v93));break;end end break;end if (v259==(1893 -(1222 + 671))) then local v421=0;while true do if ((2 -1)==v421) then v259=1;break;end if ((0 -0)==v421) then v260=0 + (1182 -(229 + 953)) ;v261=nil;v421=1775 -(1111 + 663) ;end end end end else local v262=1579 -(874 + 705) ;local v263;local v264;local v265;while true do if ((0 + 0)==v262) then v263=0 + 0 ;v264=nil;v262=1 -0 ;end if (v262==(1 + 0)) then v265=nil;while true do if (v263==(680 -(642 + 37))) then while true do if (((169 + 571)<4937) and (v264==(0 + 0))) then v265=v100[((7 -4) + (455 -(233 + 221))) -(4 -2) ];v98[v265](v21(v98,v265 + 1 + 0 + (1541 -(718 + 823)) ,v100[2 + 1 ]));break;end end break;end if (v263==(805 -(266 + 539))) then v264=(0 -0) -(1225 -(636 + 589)) ;v265=nil;v263=2 -1 ;end end break;end end end elseif (v101<=(16 -8)) then v98[v100[(676 -(89 + 459 + 119)) -(3 + 3 + (1016 -(657 + 358))) ]]=v79[v100[7 -4 ]];elseif (v101==(20 -11)) then v98[v100[((2756 -(1151 + 36)) -814) -(231 + 8 + ((411 + 1152) -(572 + 477))) ]]=v100[(5 -3) + (1833 -(1552 + 280)) ] -v98[v100[(2167 -(64 + 770)) -(542 + 255 + (1207 -675)) ]] ;else v98[v100[1 + 1 + (1243 -(157 + 1086)) ]]=v100[(3 -1) + 1 ];end elseif (v101<=((148 -114) -19)) then if (v101<=((1862 -648) -((508 -135) + (1648 -(599 + 220))))) then if (v101>((1477 -735) -((2407 -(1813 + 118)) + 255))) then v98[v100[(112 + 41 + (2196 -(841 + 376))) -((516 -147) + 177 + 584) ]]=v100[3] -v98[v100[10 -6 ]] ;else local v195=859 -(464 + 395) ;local v196;local v197;local v198;local v199;while true do if (v195==(0 -0)) then local v397=0 + 0 ;while true do if (v397==0) then v196=0 + 0 ;v197=nil;v397=1;end if (v397==1) then v195=838 -(467 + 370) ;break;end end end if (v195==(3 -1)) then while true do if (v196==(1 + 0)) then v199=(0 -0) -(0 + 0 + 0) ;for v479=v197,v100[(16 -9) -(523 -(150 + 370)) ] do local v480=0;local v481;while true do if (v480==(1282 -(74 + 1208))) then v481=238 -((156 -92) + (825 -651)) ;while true do if (v481==(0 + 0 + 0)) then v199=v199 + ((391 -(14 + 376)) -(0 -0)) ;v98[v479]=v198[v199];break;end end break;end end end break;end if (v196==((218 + 118) -(127 + 17 + 192))) then local v451=0;while true do if (0==v451) then v197=v100[(208 + 10) -(42 + (509 -335)) ];v198={v98[v197](v21(v98,v197 + 1 + 0 + 0 ,v93))};v451=1;end if (v451==1) then v196=(79 -(23 + 55)) + (0 -0) + 0 + 0 ;break;end end end end break;end if (v195==(1 + 0)) then local v398=0;while true do if (v398==(1 -0)) then v195=2;break;end if (v398==(0 + 0)) then v198=nil;v199=nil;v398=1;end end end end end elseif (v101<=((2418 -(652 + 249)) -(363 + (3053 -1912)))) then v98[v100[1870 -(708 + 1160) ]]=v98[v100[(4296 -2713) -((2156 -973) + 397) ]] -v98[v100[(38 -(10 + 17)) -(2 + 5) ]] ;elseif (v101>((1743 -(1400 + 332)) + 3)) then local v269=0 -0 ;local v270;while true do if (v269==(1908 -(242 + 1666))) then v270=v100[1 + 1 ];do return v98[v270](v21(v98,v270 + 1 + 0 + 0 + 0 ,v100[1978 -((2853 -(850 + 90)) + ((258 -110) -((1474 -(360 + 1030)) + 2 + 0))) ]));end break;end end else local v271=0 -0 ;local v272;local v273;local v274;while true do if (v271==1) then v274=nil;while true do if ((2 -((1 -0) -(1661 -(909 + 752))))==v272) then for v511=(3157 -(109 + 1114)) -((1034 -469) + 533 + 835) , #v97 do local v512=242 -(6 + 236) ;local v513;while true do if (v512==(0 + 0)) then v513=v97[v511];for v594=0 -(0 + 0) , #v513 do local v595=0;local v596;local v597;local v598;while true do if (v595==0) then local v621=0 -0 ;while true do if (v621==1) then v595=1 -0 ;break;end if (v621==0) then v596=v513[v594];v597=v596[(2795 -(1076 + 57)) -(243 + 1234 + (873 -(579 + 110))) ];v621=1 + 0 ;end end end if (v595==(1 + 0)) then v598=v596[2 -(0 + 0) ];if ((v597==v98) and (v598>=v273)) then local v628=407 -(174 + 233) ;local v629;while true do if (v628==(0 -0)) then v629=(0 -0) + 0 + 0 ;while true do if (v629==((2030 -(663 + 511)) -(504 + 60 + 64 + 228))) then v274[v598]=v597[v598];v596[(2 -1) -(0 + 0) ]=v274;break;end end break;end end end break;end end end break;end end end break;end if ((3658>=(659 -379)) and (v272==(0 -(0 -0)))) then local v486=0;local v487;while true do if (v486==(0 + 0)) then v487=0;while true do if (v487==1) then v272=(1 -0) + 0 + 0 ;break;end if (v487==(0 + 0)) then v273=v100[306 -(244 + (782 -(478 + 244))) ];v274={};v487=1;end end break;end end end end break;end if (v271==(517 -(440 + 77))) then local v423=0;while true do if (v423==0) then v272=0 + 0 + (0 -0) ;v273=nil;v423=1;end if (v423==(1557 -(655 + 901))) then v271=1 + 0 ;break;end end end end end elseif ((v101<=(14 + 4)) or ((598 + 287)>=1031)) then if ((3554>=(2115 -1590)) and (v101<=(1461 -(695 + 750)))) then local v201=0 -0 ;local v202;local v203;while true do if (v201==(1 -0)) then while true do if (v202==((1914 -1438) -((392 -(285 + 66)) + (1014 -579)))) then v203=v100[(2313 -(682 + 628)) -(152 + 786 + (362 -(176 + 123))) ];v98[v203](v98[v203 + 1 + 0 + 0 + 0 ]);break;end end break;end if (v201==(269 -(239 + 30))) then v202=0 + 0 ;v203=nil;v201=1 + 0 ;end end elseif (v101==((2020 -878) -((2919 -1983) + 189))) then v98[v100[1 + 1 ]]=v98[v100[(1931 -(306 + 9)) -((5461 -3896) + 48) ]] -v98[v100[1 + 2 + 0 + 0 + 1 ]] ;elseif ((2414<=2972) and (v98[v100[1 + 1 ]]==v98[v100[11 -7 ]])) then v92=v92 + (1139 -(((2999 -(1140 + 235)) -(317 + 180 + 317 + 28)) + 92 + 264)) ;else v92=v100[270 -((228 -(33 + 19)) + 33 + 58) ];end elseif ((3529<=(10604 -7066)) and (v101<=((22 + 27) -(58 -28)))) then v98[v100[2 + 0 ]]=v98[v100[3]] * v98[v100[5 -(690 -(586 + 103)) ]] ;elseif ((v101==(1112 -(25 + 87 + 863 + (359 -242)))) or ((4349 -(1309 + 179))<(826 -368))) then local v276=0;local v277;local v278;while true do if (v276==1) then for v453=v277 + 1 + 0 + 0 ,v100[10 -7 ] do v15(v278,v98[v453]);end break;end if (v276==(0 -0)) then v277=v100[(1418 + 459) -((57 -30) + (259 -129) + (2327 -(295 + 314))) ];v278=v98[v277];v276=1;end end else v98[v100[4 -2 ]]=v80[v100[1965 -(1300 + 662) ]];end elseif (v101<=((342 -233) -(1832 -(1178 + 577)))) then if ((1717<=(2350 + 2175)) and (v101<=(1044 -(697 + (948 -627))))) then if ((v101<=(1428 -(851 + 554))) or ((2811 + 367)<=(4226 -2702))) then if (((9238 -4984)>370) and (v101==(324 -(115 + 187)))) then local v205=0 + 0 ;local v206;while true do if (v205==(0 + 0)) then v206=v100[5 -(11 -8) ];v98[v206](v21(v98,v206 + (1162 -(160 + 1001)) ,v100[((1171 + 167) -(418 + 187 + (1490 -762))) -(360 -(237 + 121)) ]));break;end end else local v207=0;local v208;while true do if (v207==(897 -(525 + 372))) then v208=v100[(7 -3) -(6 -4) ];v98[v208]=v98[v208](v21(v98,v208 + (143 -(96 + 46)) + (777 -(643 + 134)) ,v100[5 -(1 + 1) ]));break;end end end elseif ((v101<=(57 -33)) or ((6070 -4435)==1777)) then local v209=0;local v210;local v211;while true do if ((0 + 0)==v209) then v210=(0 -0) -(0 -0) ;v211=nil;v209=1;end if (v209==1) then while true do if ((v210==((1946 -(316 + 403)) -(322 + 430 + 216 + 259))) or ((9177 -5839)>=(1444 + 2549))) then v211=v100[4 -2 ];v98[v211](v98[v211 + (612 -(602 + ((14 + 5) -10))) ]);break;end end break;end end elseif (v101>((392 + 822) -((1555 -1106) + 740))) then v98[v100[(4174 -3300) -((78 -40) + 788 + 3 + 43) ]][v100[((6913 -3401) -(126 + 2436)) -((720 -475) + (719 -(12 + 5))) ]]=v98[v100[15 -11 ]];elseif (v98[v100[2]]==v98[v100[((23 -12) + 1) -(16 -8) ]]) then v92=v92 + 1 + (0 -0) ;else v92=v100[1901 -(53 + 207 + (3611 -(1656 + 317))) ];end elseif (((1029 + 125)<=1475) and (v101<=(469 -(307 + 75 + (154 -96))))) then if (v101<=(74 -(231 -184))) then v98[v100[(360 -(5 + 349)) -(18 -14) ]]={};elseif (v101>(24 + 4)) then v98[v100[1273 -(266 + 1005) ]][v100[5 -2 ]]=v98[v100[3 + 1 ]];else local v285=v100[(16 -11) -(3 -0) ];local v286,v287=v91(v98[v285](v21(v98,v285 + (1697 -(561 + 1135)) ,v100[(1573 -365) -(902 + (995 -692)) ])));v93=(v287 + v285) -(1 -0) ;local v288=((1066 -(507 + 559)) + (0 -0)) -0 ;for v402=v285,v93 do local v403=0 -0 ;while true do if (v403==(388 -(212 + 176))) then v288=v288 + (906 -(250 + 655)) + (489 -((1246 -789) + (55 -23))) ;v98[v402]=v286[v288];break;end end end end elseif ((v101<=((2691 -971) -((3077 -(1869 + 87)) + (839 -597) + 327))) or (2610<1230)) then local v213=1901 -(484 + 1417) ;local v214;local v215;local v216;while true do if (v213==1) then v216=nil;while true do if (v214==0) then v215=v100[2];v216=v98[v100[(3011 -1606) -((1393 -561) + (1343 -(48 + 725))) ]];v214=1 -0 ;end if (v214==(2 -1)) then v98[v215 + ((125 + 90) -(22 + (512 -320))) ]=v216;v98[v215]=v216[v100[687 -(136 + 347 + 59 + 141) ]];break;end end break;end if (v213==(853 -(152 + 701))) then v214=0;v215=nil;v213=1312 -(430 + 881) ;end end elseif ((v101==((540 + 868 + (981 -(557 + 338))) -(1404 + 16 + 43))) or (1448==(912 + 2171))) then v98[v100[(14 -9) -(10 -7) ]]=v98[v100[7 -4 ]] * v98[v100[8 -4 ]] ;else v98[v100[2 -(801 -(499 + 302)) ]]=v100[(1634 -(39 + 827)) -((1656 -(3279 -2091)) + (663 -366)) ];end elseif ((3139>(3638 -2722)) and (v101<=((28 -9) + 2 + 17))) then if ((2954==(8645 -5691)) and (v101<=((96 + 501) -(334 + (360 -132))))) then if (v101<=(((1011 -(103 + 1)) -((1142 -(475 + 79)) + 208)) -(168 -90))) then if ((117<=(9254 -6362)) and (v98[v100[(1 + 3) -(2 + 0) ]]==v100[(1509 -(1395 + 108)) -(5 -3) ])) then v92=v92 + (1205 -(7 + 1197)) + 0 + 0 ;else v92=v100[(84 + 155) -((460 -(27 + 292)) + (278 -183)) ];end elseif (v101==((42 -8) + 0)) then v98[v100[(16 -12) -2 ]]=v80[v100[(11 -5) -3 ]];else local v295=0 -0 ;local v296;while true do if (v295==(139 -(43 + 96))) then v296=v100[(2 -(4 -3)) + (1 -0) ];v98[v296](v21(v98,v296 + (2 -(1 + 0)) ,v93));break;end end end elseif (v101<=(8 + 18 + (19 -9))) then if ((v98[v100[1 + 1 + 0 ]]~=v100[4]) or ((848 -395)>(1468 + 3194))) then v92=v92 + 1 ;else v92=v100[(1 + 3) -(1752 -(1414 + 337)) ];end elseif (v101==((1822 -(884 + 916)) + (1955 -(1642 + 298)))) then local v298=0;local v299;local v300;local v301;while true do if (v298==1) then v301=(0 -0) -(0 -(0 -0)) ;for v462=v299,v100[769 -(574 + 191) ] do local v463=0 -0 ;local v464;while true do if (v463==(0 + 0)) then v464=0 + 0 + (972 -(357 + 615)) ;while true do if (v464==((0 + 0) -(0 -0))) then v301=v301 + 1 ;v98[v462]=v300[v301];break;end end break;end end end break;end if (v298==(0 + 0)) then local v427=0;while true do if (v427==(0 -0)) then v299=v100[2];v300={v98[v299](v98[v299 + 1 + 0 ])};v427=1 + 0 ;end if (v427==(1 + 0)) then v298=1;break;end end end end elseif ((1320>595) and v98[v100[1303 -(384 + 917) ]]) then v92=v92 + (698 -(128 + 569)) + (1543 -(1407 + 136)) ;else v92=v100[(2739 -(687 + 1200)) -((1964 -(556 + 1154)) + (2093 -1498)) ];end elseif (v101<=(167 -((150 -(9 + 86)) + (492 -(275 + 146))))) then if (v101<=((9 + 41) -(75 -(29 + 35)))) then v79[v100[((4609 -3569) + (2248 -1495)) -((2529 -1956) + 793 + 424) ]]=v98[v100[(1017 -(53 + 959)) -(411 -(312 + 96)) ]];elseif (v101==((6 -2) + 36)) then local v302=285 -(147 + 138) ;local v303;local v304;local v305;while true do if (v302==(899 -(813 + 86))) then local v428=0 + 0 ;while true do if (v428==(0 -0)) then v303=0;v304=nil;v428=1;end if ((493 -(18 + 474))==v428) then v302=1 + 0 ;break;end end end if (v302==(3 -2)) then v305=nil;while true do if (v303==(1086 -(860 + 226))) then local v489=303 -(121 + 182) ;while true do if (v489==0) then v304=v100[2 -(0 + 0) ];v305=v98[v100[(2182 -(988 + 252)) -(714 + 225) ]];v489=1 + 0 ;end if (v489==1) then v303=2 -(1 + 0) ;break;end end end if ((((1971 -(49 + 1921)) -0)==v303) or ((4089 -(223 + 667))<(642 -(51 + 1)))) then v98[v304 + (1 -0) + ((1398 -745) -((1357 -(146 + 979)) + 119 + 302)) ]=v305;v98[v304]=v305[v100[(610 -(311 + 294)) -(2 -1) ]];break;end end break;end end else local v306=0 + 0 ;local v307;local v308;local v309;while true do if (v306==(1444 -(496 + 947))) then v309=nil;while true do if (v307==(1359 -(1233 + 125))) then while true do if (((20 + 28) -((1914 -(1569 + 288 + 32)) + 5 + 18))==v308) then v309=v100[2];v98[v309]=v98[v309](v21(v98,v309 + 1 ,v100[(1646 -(963 + 682)) + 2 + 0 ]));break;end end break;end if ((1504 -(504 + 1000))==v307) then v308=806 -(118 + 464 + 224) ;v309=nil;v307=1 + 0 ;end end break;end if (v306==0) then v307=0 + 0 ;v308=nil;v306=1;end end end elseif (v101<=((2842 -914) -(792 + 135 + 558 + 401))) then v98[v100[(188 -(156 + 26)) -(1 + 0 + (3 -0)) ]]();elseif ((v101>((939 -(149 + 15)) -((976 -(890 + 70)) + 716))) or ((4910 -(39 + 78))<(512 -(14 + 468)))) then v98[v100[3 -(2 -1) ]]();else v92=v100[(279 -179) -(6 + 5 + 52 + 34) ];end elseif (v101<=((35 + 128) -(44 + 52))) then if ((v101<=((90 + 250) -((334 -159) + 110))) or ((1677 + 19)<=1059)) then if (v101<=(123 -(259 -185))) then if (v101<=((6 + 220) -180)) then if (v101==((1892 -(12 + 39)) -(468 + 35 + 1293))) then v98[v100[(15 -10) -(10 -7) ]]=v98[v100[3 + 0 + 0 ]];elseif v98[v100[(560 + 503) -(810 + (636 -385)) ]] then v92=v92 + 1 + 0 ;else v92=v100[14 -11 ];end elseif (v101<=(33 + 14)) then local v221=1710 -(1596 + 114) ;local v222;local v223;local v224;local v225;local v226;while true do if (v221==(4 -2)) then v226=nil;while true do if (v222==0) then v223=0 + (713 -(164 + 549)) + (1438 -(1059 + 379)) ;v224=nil;v222=1 -0 ;end if (v222==(2 + 0)) then while true do if (((395 + 1948)==(2735 -(145 + 247))) and (v223==(0 + 0))) then local v514=0;local v515;while true do if (v514==(0 + 0)) then v515=0 -0 ;while true do if (v515==(1 + 0)) then v223=(522 + 84) -((512 -196) + (1009 -(254 + 466))) ;break;end if (v515==(560 -(544 + 16))) then v224=v100[6 -(12 -8) ];v225={v98[v224](v21(v98,v224 + ((787 -(236 + 17)) -(19 + 24 + 382 + 108)) ,v93))};v515=1;end end break;end end end if (v223==(3 -2)) then v226=(3470 -2737) -(((959 + 902) -(948 + 202)) + (816 -(413 + 381))) ;for v533=v224,v100[15 -(1 + 10) ] do local v534=0 -0 ;local v535;while true do if (v534==0) then v535=(2230 -1371) -((2210 -(582 + 1388)) + (1054 -435)) ;while true do if ((v535==(0 + 0 + (364 -(326 + 38)) + 0)) or ((3085 -2042)>(5126 -1535))) then v226=v226 + (621 -(47 + 573)) ;v98[v533]=v225[v226];break;end end break;end end end break;end end break;end if (v222==(1 + 0)) then local v465=0;while true do if (v465==0) then v225=nil;v226=nil;v465=4 -3 ;end if (v465==(1 -0)) then v222=1666 -(1269 + 395) ;break;end end end end break;end if (v221==1) then v224=nil;v225=nil;v221=494 -(76 + 416) ;end if (v221==(443 -(319 + 124))) then v222=0 -0 ;v223=nil;v221=1008 -(564 + 443) ;end end elseif ((v101==48) or ((8000 -5110)>=(4537 -(337 + 121)))) then v98[v100[(1455 -(666 + (2305 -1518))) -(0 -0) ]]=v100[1 + 2 ]~=((3655 -(1261 + 650)) -(569 + 775 + (637 -237))) ;else v98[v100[407 -((2072 -(772 + 1045)) + 22 + 128) ]]=v79[v100[3 + (425 -(360 + 65)) ]];end elseif (v101<=(196 -(102 + 42))) then if (v101<=((1871 -(1524 + 320)) + 23)) then if  not v98[v100[(1278 -(1049 + 221)) -(162 -(18 + 138)) ]] then v92=v92 + (((7 -4) + (1102 -(67 + 1035))) -(350 -(136 + 212))) ;else v92=v100[1742 -((1716 -1312) + 1335) ];end elseif (v101==(41 + 10)) then local v316=0;local v317;local v318;local v319;local v320;while true do if (1==v316) then v319=nil;v320=nil;v316=2 + 0 ;end if (v316==(1604 -(240 + 1364))) then local v429=1082 -(1050 + 32) ;while true do if (v429==(3 -2)) then v316=1;break;end if (v429==(0 + 0)) then v317=((1715 -(331 + 724)) -(7 + 72 + 175)) -((827 -(269 + 375)) + (948 -(267 + 458))) ;v318=nil;v429=1;end end end if (v316==2) then while true do if (v317==(1 + 0)) then local v493=0;while true do if ((1 -0)==v493) then v317=2;break;end if (v493==(818 -(667 + 151))) then v320={};v319=v18({},{[v7("\180\207\59\83\252\162\147","\199\235\144\82\61\152")]=function(v567,v568) local v569=0;local v570;while true do if (v569==(1497 -(1410 + 87))) then v570=v320[v568];return v570[(1898 -(1504 + 393)) -(0 -0) ][v570[2 + (0 -0) ]];end end end,[v7("\56\41\183\46\16\31\183\47\2\14","\75\103\118\217")]=function(v571,v572,v573) local v574=796 -(461 + 335) ;local v575;local v576;while true do if (v574==(1 + 0)) then while true do if (v575==(0 + 0)) then v576=v320[v572];v576[1762 -(1730 + 31) ][v576[(2006 -(728 + 939)) -((35 -25) + 327) ]]=v573;break;end end break;end if (v574==(0 -0)) then local v608=0 -0 ;while true do if (v608==0) then v575=1068 -(138 + 930) ;v576=nil;v608=1;end if ((1 + 0)==v608) then v574=1 + 0 ;break;end end end end end});v493=1 + 0 ;end end end if (v317==((0 -0) + (1766 -(459 + 1307)))) then v318=v89[v100[341 -((1988 -(474 + 1396)) + (384 -164)) ]];v319=nil;v317=(1 + 0) -0 ;end if (v317==(1 + 0 + (2 -1))) then for v516=(58 + 392) -((360 -252) + 341) ,v100[17 -13 ] do local v517=591 -(562 + 29) ;local v518;local v519;while true do if (v517==0) then v518=0 + 0 ;v519=nil;v517=1 + 0 ;end if (v517==(1420 -(374 + 1045))) then while true do if (((3541 + 933)<=4770) and (v518==(4 -3))) then if (v519[2 -1 ]==((2187 -(448 + 190)) -(711 + 253 + 529))) then v320[v516-((1 + 0) -(0 + 0)) ]={v98,v519[(5661 -3839) -((2074 -(1307 + 187)) + (4913 -3674)) ]};else v320[v516-(((11 -6) -3) -((2 -1) -(683 -(232 + 451)))) ]={v79,v519[(566 -(510 + 54)) + (1 -0) ]};end v97[ #v97 + (2 -1) ]=v320;break;end if (v518==((36 -(13 + 23)) + (0 -0))) then local v610=0 -0 ;local v611;while true do if (v610==0) then v611=0 -0 ;while true do if (v611==(1088 -(830 + 258))) then v92=v92 + (((4758 -3409) -(92 + 56 + 33)) -(549 + 96 + ((2453 -(860 + 581)) -490))) ;v519=v88[v92];v611=3 -2 ;end if (v611==1) then v518=1791 -(802 + 208 + (1021 -(237 + 4))) ;break;end end break;end end end end break;end end end v98[v100[2 + (0 -0) + 0 ]]=v40(v318,v319,v80);break;end end break;end end else local v321=0 -0 ;local v322;local v323;local v324;local v325;local v326;while true do if (v321==(1 -0)) then v324=nil;v325=nil;v321=2 + 0 ;end if ((2 + 0)==v321) then v326=nil;while true do if ((0 -0)==v322) then local v496=0 + 0 ;while true do if (v496==0) then v323=v100[2];v324,v325=v91(v98[v323](v21(v98,v323 + ((3 + 1) -(1429 -(85 + 1341))) ,v100[(13 -5) -(3 + (5 -3)) ])));v496=373 -(45 + 327) ;end if (v496==1) then v322=1 -0 ;break;end end end if (v322==(504 -(444 + 58))) then for v520=v323,v93 do local v521=0 -(0 + 0) ;while true do if (((((0 + 0) -(0 + 0)) -(0 -0))==v521) or (4942==(5635 -(64 + 1668)))) then v326=v326 + (506 -((2324 -(1227 + 746)) + 154)) ;v98[v520]=v324[v326];break;end end end break;end if (v322==1) then v93=(v325 + v323) -(2 -1) ;v326=(3407 -1571) -((1539 -(415 + 79)) + 791) ;v322=2;end end break;end if ((0 + 0)==v321) then v322=491 -(142 + 349) ;v323=nil;v321=1 + 0 ;end end end elseif (v101<=53) then for v250=v100[((296 -80) + 1360) -(637 + 644 + ((470 + 197) -(1018 -644))) ],v100[((2099 -(1710 + 154)) + 34) -((346 -(200 + 118)) + 95 + 143) ] do v98[v250]=nil;end elseif (v101==(((101 -43) + (91 -29)) -(59 + 7))) then if (v98[v100[(1545 + 16) -(742 + 639 + 178) ]]~=v100[1 + 3 + (0 -0) ]) then v92=v92 + (1251 -(363 + 887)) ;else v92=v100[(5 -2) + (0 -0) ];end else local v327=0 + 0 ;local v328;local v329;while true do if (v327==(2 -1)) then for v466=(3 + 0) -(1666 -(674 + 990)) , #v97 do local v467=0 + 0 + 0 ;local v468;while true do if ((v467==((193 + 277) -((603 -222) + (1144 -(507 + 548))))) or (248>4845)) then v468=v97[v466];for v536=837 -(289 + 548) , #v468 do local v537=1818 -(821 + 997) ;local v538;local v539;local v540;while true do if (v537==(256 -(195 + 60))) then v540=v538[(5 -(1 + 2)) + (1501 -(251 + 1250)) ];if ((v539==v98) and (v540>=v328)) then local v612=0 -0 ;local v613;while true do if (v612==(0 + 0)) then v613=(1032 -(809 + 223)) -(0 -0) ;while true do if (v613==((145 + (3036 -2025)) -(((5412 -3775) -(415 + 148)) + 43 + 39))) then v329[v540]=v539[v540];v538[(618 -(14 + 603)) -0 ]=v329;break;end end break;end end end break;end if ((129 -(118 + 11))==v537) then v538=v468[v536];v539=v538[1 + 0 + 0 ];v537=1;end end end break;end end end break;end if (v327==(0 + 0)) then local v430=0 -0 ;local v431;while true do if ((949 -(551 + 398))==v430) then v431=0 + 0 ;while true do if (1==v431) then v327=1;break;end if (v431==0) then v328=v100[1 + 0 + 1 ];v329={};v431=1;end end break;end end end end end elseif (v101<=(50 + 11)) then if (v101<=((6850 -5008) -((1458 -((1117 -632) + 246 + 513)) + (6232 -4662)))) then if (((434 + 1135)==(1658 -(40 + 49))) and (v101<=(1511 -(990 + (1770 -1305))))) then v98[v100[(491 -(99 + 391)) + 1 + 0 ]]=v98[v100[2 + (4 -3) ]];elseif ((v101>((138 -82) + 1)) or ((4800 + 127)<=(8475 -5254))) then local v330=1604 -(1032 + 572) ;local v331;local v332;local v333;local v334;local v335;while true do if (v330==(418 -(203 + 214))) then v333=nil;v334=nil;v330=1819 -(568 + 1249) ;end if (v330==0) then v331=0;v332=nil;v330=1 + 0 ;end if (v330==2) then v335=nil;while true do if (v331==0) then local v497=0 -0 ;local v498;while true do if (v497==(0 -0)) then v498=0;while true do if (v498==(1307 -(913 + 393))) then v331=2 -1 ;break;end if ((0 -0)==v498) then v332=(410 -(269 + 141)) -((0 -0) -0) ;v333=nil;v498=1982 -(362 + 1619) ;end end break;end end end if (v331==1) then local v499=1625 -(950 + 675) ;local v500;while true do if (v499==(0 + 0)) then v500=0;while true do if (v500==0) then v334=nil;v335=nil;v500=1180 -(216 + 963) ;end if (v500==1) then v331=1289 -(485 + 802) ;break;end end break;end end end if (2==v331) then while true do if ((v332==(560 -(432 + 127))) or ((2853 -(1065 + 8))>2787)) then v335=(959 + 767) -((3269 -(635 + 966)) + 58) ;for v579=v333,v100[(453 + 177) -((554 -(5 + 37)) + 114) ] do local v580=0 -0 ;while true do if (v580==(0 + 0)) then v335=v335 + ((1191 -((698 -256) + 747)) -(1 + 0)) ;v98[v579]=v334[v335];break;end end end break;end if ((v332==(0 -(0 -0))) or ((14926 -10989)<=(2319 -1089))) then local v552=0;local v553;while true do if (v552==(0 -0)) then v553=0 + 0 ;while true do if (v553==(529 -(318 + 211))) then v333=v100[9 -7 ];v334={v98[v333](v98[v333 + (1588 -(963 + 624)) + 0 + 0 ])};v553=847 -(518 + 328) ;end if ((2 -1)==v553) then v332=1;break;end end break;end end end end break;end end break;end end else local v336=0 -0 ;local v337;local v338;local v339;while true do if (v336==(317 -(301 + 16))) then v337=0 -0 ;v338=nil;v336=1;end if (v336==(2 -1)) then v339=nil;while true do if (v337==1) then while true do if ((v338==(((2468 -1522) -(88 + 778 + 80)) + 0 + 0)) or ((5629 -2992)<1706)) then v339=v100[(4 + 2) -(1 + 3) ];do return v21(v98,v339,v93);end break;end end break;end if (v337==(0 -0)) then v338=0 + 0 + (1019 -(829 + 190)) ;v339=nil;v337=3 -2 ;end end break;end end end elseif (v101<=(73 -14)) then local v229=((840 -232) + 1386) -((225 -134) + 5 + 13 + 78 + 1807) ;local v230;while true do if (v229==(0 + 0)) then v230=v100[(4464 -2993) -(1198 + 71 + (813 -(520 + 93))) ];v98[v230]=v98[v230](v21(v98,v230 + ((277 -(259 + 17)) -(0 + 0)) ,v93));break;end end elseif ((v101==((1664 -(276 + 490 + (77 -54))) -((689 -(396 + 195)) + (2080 -1363)))) or ((4430 -(440 + 1321))<=(4238 -(1059 + 770)))) then do return;end else v98[v100[9 -7 ]]=v40(v89[v100[829 -((1347 -(424 + 121)) + 5 + 19) ]],nil,v80);end elseif (v101<=((1456 -(641 + 706)) -(18 + 27))) then if (v101<=((517 -(249 + 191)) -(65 -50))) then do return;end elseif (v101>(29 + 34)) then local v341=0;local v342;local v343;local v344;local v345;local v346;while true do if (v341==(3 -2)) then v344=v342 + (429 -(183 + 244)) ;v345={v98[v342](v98[v342 + (731 -(434 + 296)) + (0 -0) ],v98[v344])};v341=514 -(169 + 343) ;end if (v341==(2 + 0)) then for v469=1 + 0 ,v343 do v98[v344 + v469 ]=v345[v469];end v346=v345[(3 -1) -(2 -1) ];v341=3;end if (v341==(3 + 0)) then if v346 then local v482=0 -0 ;while true do if (v482==(1123 -(651 + 472))) then v98[v344]=v346;v92=v100[(7 + 2) -6 ];break;end end else v92=v92 + 1 + 0 + ((0 -0) -(483 -(397 + 86))) ;end break;end if ((876 -(423 + 453))==v341) then local v433=0 + 0 ;while true do if (v433==(1 + 0)) then v341=1 + 0 ;break;end if (v433==(0 + 0)) then v342=v100[1 + 0 + (1191 -(50 + 1140)) ];v343=v100[4];v433=1;end end end end elseif (v98[v100[1 + 1 + 0 ]]==v100[3 + 1 + 0 ]) then v92=v92 + 1 + 0 + 0 ;else v92=v100[(2 -0) + 1 + 0 ];end elseif ((v101<=((2094 -(157 + 439)) -(797 + (1105 -469)))) or (1401>(15603 -10907))) then if (v100[(26 -17) -(925 -(782 + 136)) ]==v98[v100[859 -(112 + 743) ]]) then v92=v92 + ((2791 -(1026 + 145)) -(245 + 1182 + (910 -(493 + 225)))) ;else v92=v100[(7 -5) + 1 + 0 ];end elseif ((v101>((208 -(147 -92)) -(2 + 85))) or (3280<1321)) then v98[v100[5 -3 ]]=v98[v100[1 + 2 ]]/v100[6 -2 ] ;else v98[v100[(1597 -(210 + 1385)) + 0 ]]=v98[v100[2 + 1 ]] + v98[v100[330 -(192 + (1823 -(1201 + 488))) ]] ;end elseif (v101<=(1354 -(196 + 120 + (1707 -747)))) then if (v101<=((73 -32) + ((666 -(352 + 233)) -(120 -70)))) then if (v101<=(30 + 24 + (42 -27))) then if ((4927>=(2877 -(489 + 85))) and (v101>(1569 -(277 + 1224)))) then local v231=0;local v232;local v233;local v234;while true do if (v231==(1494 -(663 + 830))) then v234=nil;while true do if (v232==(1 + 0)) then while true do if ((3462>=(2526 -1494)) and (v233==((875 -(461 + 414)) -(0 + 0)))) then v234=v100[1 + 1 ];v98[v234]=v98[v234](v98[v234 + (552 -(83 + 45 + 423)) ]);break;end end break;end if (v232==(0 + 0)) then local v472=250 -(172 + 78) ;while true do if (v472==(1 -0)) then v232=1 + 0 ;break;end if ((0 -0)==v472) then v233=0 + 0 + 0 ;v234=nil;v472=1 + 0 ;end end end end break;end if (v231==(0 -0)) then v232=0;v233=nil;v231=1 -0 ;end end else v98[v100[(455 + 1353) -(1202 + 604) ]]=v98[v100[(44 -(18 + 13)) -(4 + 6) ]]/v100[4] ;end elseif (v101<=(116 -(183 -137))) then if (v98[v100[(11 -6) -(1 + 2) ]]<v100[((801 + 601) -((1483 -(133 + 314)) + 7 + 30)) -((258 -(199 + 14)) + (1002 -722)) ]) then v92=v92 + (1550 -(647 + 902)) + (0 -0) ;else v92=v100[236 -(85 + 148) ];end elseif ((v101>((1352 -(426 + 863)) + 8)) or (1077>=(9411 -7400))) then local v351=1654 -(873 + 781) ;local v352;local v353;local v354;while true do if (v351==(0 -0)) then v352=v100[4 -2 ];v353=v98[v352];v351=1;end if (v351==(1 + 0)) then v354=v100[(7 -5) + (1 -0) ];for v473=1 + (0 -0) ,v354 do v353[v473]=v98[v352 + v473 ];end break;end end else local v355=1947 -(414 + 1533) ;local v356;local v357;local v358;local v359;local v360;while true do if (v355==(1 + 0)) then v358=nil;v359=nil;v355=557 -(443 + 112) ;end if (v355==0) then local v437=0;while true do if (v437==(1479 -(888 + 591))) then v356=(0 -0) + 0 + 0 ;v357=nil;v437=1;end if (1==v437) then v355=1;break;end end end if (v355==2) then v360=nil;while true do if (v356==(0 -(0 -0))) then local v503=0 + 0 ;while true do if (v503==1) then v356=(858 + 915) -(186 + 1547 + 39) ;break;end if (v503==(0 -0)) then v357=v100[(3543 -1630) -((1920 -(136 + 1542)) + (321 -223) + 1560 + 11) ];v358,v359=v91(v98[v357](v98[v357 + 1 + (0 -0) ]));v503=1 + 0 ;end end end if (v356==(5 -3)) then for v525=v357,v93 do local v526=486 -(68 + 418) ;while true do if (v526==0) then v360=v360 + ((2805 -1770) -((226 -101) + 785 + 124)) ;v98[v525]=v358[v360];break;end end end break;end if (v356==((3041 -(770 + 322)) -(((123 + 2011) -1038) + 247 + 605))) then v93=(v359 + v357) -(1 + 0 + 0) ;v360=(0 -0) -((0 -0) + 0) ;v356=((4035 -2553) -(641 + 839)) + 0 ;end end break;end end end elseif ((1543<(8883 -6468)) and (v101<=((327 + 260) -((612 -203) + 50 + 53)))) then if (v101<=(45 + 28)) then v79[v100[(188 + 51) -((173 -127) + (263 -73)) ]]=v98[v100[1 + 1 ]];elseif (v101>((778 -609) -((168 -117) + 19 + 25))) then local v361=0 -0 ;local v362;local v363;local v364;local v365;while true do if (v361==(831 -(762 + 69))) then local v438=0 -0 ;while true do if (0==v438) then v362=0 + 0 + 0 + 0 ;v363=nil;v438=2 -1 ;end if (v438==1) then v361=1 + 0 ;break;end end end if (v361==(1 + 1)) then while true do if ((v362==((5138 -3819) -(1114 + 203))) or (4444<(2172 -(8 + 149)))) then for v527=(2047 -(1199 + 121)) -((385 -157) + (1124 -626)) ,v100[1 + 2 + 1 ] do v92=v92 + 1 + 0 ;local v528=v88[v92];if (v528[664 -(174 + (1402 -((3248 -2338) + (6 -3)))) ]==(((327 + 42) -224) -(1773 -(1466 + (2025 -(518 + 1289)))))) then v365[v527-((1 -0) + 0) ]={v98,v528[(1857 -585) -(171 + 60 + (1507 -(304 + 165))) ]};else v365[v527-(1 + 0) ]={v79,v528[12 -(169 -(54 + 106)) ]};end v97[ #v97 + (2 -(1970 -(1618 + 351))) ]=v365;end v98[v100[(3 + 1) -(1018 -(10 + 1006)) ]]=v40(v363,v364,v80);break;end if (v362==(1 + 0 + 0 + 0)) then local v505=0 -0 ;while true do if (v505==1) then v362=(2283 -(912 + 121)) -(111 + 538 + 599) ;break;end if (v505==0) then v365={};v364=v18({},{[v7("\248\107\121\26\189\27\223","\126\167\52\16\116\217")]=function(v583,v584) local v585=1289 -(1140 + 149) ;local v586;while true do if (v585==(0 + 0)) then v586=v365[v584];return v586[(3 -0) -(1 + 1) ][v586[(17 -12) -3 ]];end end end,[v7("\247\17\46\133\163\16\242\204\43\56","\156\168\78\64\224\212\121")]=function(v587,v588,v589) local v590=0 -0 ;local v591;while true do if ((0 + 0)==v590) then v591=v365[v588];v591[(3 -2) -(186 -(165 + 21)) ][v591[(117 -(61 + 50)) -(2 + 2) ]]=v589;break;end end end});v505=4 -3 ;end end end if ((((2631 -1325) -(219 + 337 + (2052 -(1295 + 165)))) -(21 + 70 + 27 + 40))==v362) then local v506=1397 -(819 + 578) ;local v507;while true do if (v506==(1402 -(331 + 1071))) then v507=0;while true do if (v507==1) then v362=1;break;end if (v507==(743 -(588 + 155))) then v363=v89[v100[(1290 -(546 + 736)) -(1942 -(1834 + 103)) ]];v364=nil;v507=1 + 0 ;end end break;end end end end break;end if (v361==(2 -1)) then local v439=1766 -(1536 + 230) ;while true do if (v439==(492 -(128 + 363))) then v361=1 + 1 ;break;end if (0==v439) then v364=nil;v365=nil;v439=1;end end end end else local v366=0 -0 ;local v367;local v368;local v369;local v370;local v371;while true do if ((1 + 1)==v366) then for v476=(1 -0) + ((2514 -1660) -(174 + (1651 -971))) ,v368 do v98[v369 + v476 ]=v370[v476];end v371=v370[772 -(224 + 102 + (1454 -(615 + 394))) ];v366=3 + 0 ;end if (v366==(1 + 0)) then v369=v367 + (2 -1) + (4 -3) ;v370={v98[v367](v98[v367 + ((4 -2) -(1 -0)) ],v98[v369])};v366=2 + 0 ;end if ((174 -(70 + 101))==v366) then if v371 then local v483=0;while true do if (v483==0) then v98[v369]=v371;v92=v100[(31 -18) -(8 + 2) ];break;end end else v92=v92 + (2 -(2 -1)) ;end break;end if (v366==(241 -(123 + 118))) then v367=v100[1 + 0 + 1 ];v368=v100[(7 + 520) -((1822 -(653 + 746)) + 100) ];v366=1;end end end elseif (v101<=((487 -226) -(266 -81))) then v98[v100[4 -(5 -3) ]]=v98[v100[714 -(530 + 80 + 101) ]] + v100[(567 + 318) -(537 + 77 + 33 + 234) ] ;elseif (v101>((18 + 91) -(19 + 13))) then if ( not v98[v100[2]] or (4200==(5716 -3384))) then v92=v92 + ((1 + 0) -0) ;else v92=v100[6 -(4 -1) ];end else local v372=0;local v373;local v374;local v375;local v376;local v377;while true do if (v372==(1235 -(885 + 349))) then v375=nil;v376=nil;v372=2 + 0 ;end if ((0 -0)==v372) then v373=((0 -0) -0) -(968 -(915 + 53)) ;v374=nil;v372=802 -(768 + 33) ;end if (v372==2) then v377=nil;while true do if (v373==((3 -2) + (1 -0))) then for v530=v374,v93 do local v531=0;local v532;while true do if ((328 -(287 + 41))==v531) then v532=0 -(847 -(638 + 209)) ;while true do if ((0 -(0 + 0))==v532) then v377=v377 + (1813 -((2610 -(96 + 1590)) + 369 + (2191 -(741 + 931)))) ;v98[v530]=v375[v377];break;end end break;end end end break;end if (v373==((0 + 0) -((2105 -1366) -((1849 -1453) + 343)))) then local v508=0 + 0 ;while true do if (v508==(0 + 0)) then v374=v100[4 -2 ];v375,v376=v91(v98[v374](v98[v374 + ((1 + 0) -(0 -0)) ]));v508=1;end if (v508==(1 + 0)) then v373=4 -3 ;break;end end end if (v373==(1 + 0)) then v93=(v376 + v374) -(4 -3) ;v377=(0 + 0 + 0) -0 ;v373=2 + (494 -(64 + 430)) ;end end break;end end end elseif (v101<=(18 + 0 + (429 -(106 + 257)))) then if (v101<=((133 + 54) -(827 -(496 + 225)))) then if (v101<=(19 + (122 -62))) then local v239=0 -0 ;local v240;local v241;local v242;while true do if (v239==(1659 -(256 + 1402))) then v242=v100[(1901 -(30 + 1869)) + 1 ];for v417=1097 -(709 + (1756 -(213 + 1156))) ,v242 do v241[v417]=v98[v240 + v417 ];end break;end if (v239==(188 -(96 + 92))) then v240=v100[1 + 0 + (900 -(142 + 757)) ];v241=v98[v240];v239=1 + 0 ;end end elseif ((v101==(1938 -(673 + 485 + 700))) or (1278>=(1395 -(32 + 47)))) then local v378=0 -0 ;local v379;while true do if (((3059 -(1053 + 924))==(1060 + 22)) and (v378==((0 -0) -(1648 -(685 + 963))))) then v379=v100[(3 -1) -(0 -0) ];v98[v379](v21(v98,v379 + ((3187 -(541 + 1168)) -(29 + 1448)) + (1389 -((1732 -(645 + 952)) + (2092 -(669 + 169)))) ,v93));break;end end else v98[v100[2 + 0 ]]=v98[v100[((38 -27) -8) -0 ]] + v98[v100[(1 -0) + 2 + 1 ]] ;end elseif (v101<=(382 -(67 + 233))) then local v243=0 -(765 -(181 + 584)) ;local v244;while true do if (v243==(1395 -(665 + 730))) then v244=v100[5 -3 ];do return v98[v244](v21(v98,v244 + ((1 -0) -(1350 -(540 + 810))) ,v100[2 + (3 -2) ]));end break;end end elseif (((3651 -2323)<=4878) and (v101==((1563 + 400) -((649 -(166 + 37)) + ((4842 -(22 + 1859)) -((2161 -(843 + 929)) + (1400 -(30 + 232)))))))) then local v381=0;local v382;while true do if (v381==0) then v382=v100[(3670 -2385) -((1817 -(55 + 722)) + (521 -278)) ];v98[v382]=v98[v382](v98[v382 + ((1677 -(78 + 1597)) -(1 + 0)) ]);break;end end else v92=v100[3 + 0 ];end elseif (v101<=(73 + 14)) then if (((4636 -(305 + 244))>=(1258 + 97)) and (v101<=(((2611 -(95 + 10)) -(73 + 29 + (1495 -1023))) -((764 -205) + (2050 -(592 + 170)))))) then v98[v100[(6741 -4808) -((1529 -920) + 1322) ]]={};elseif ((v101>86) or ((276 + 314)>(1810 + 2840))) then if (v98[v100[4 -2 ]]<v100[458 -(13 + 72 + 369) ]) then v92=v92 + (3 -((3 -1) + (507 -(353 + 154)))) ;else v92=v100[(9 -2) -((3 -0) + 1 + 0) ];end else v98[v100[9 -(6 + 1) ]][v100[3]]=v100[3 + 1 ];end elseif (v101<=((5 -1) + 0 + (158 -74))) then v98[v100[(15 -8) -(91 -(7 + 79)) ]]=v100[((724 + 823) -((501 -(24 + 157)) + 1225)) + (1 -0) ]~=((0 -0) + 0 + 0) ;elseif (v101==((710 -446) -((691 -(262 + 118)) -(1219 -(1038 + 45))))) then local v386=0;local v387;while true do if (v386==0) then v387=v100[(3 -1) + 0 ];do return v21(v98,v387,v93);end break;end end else v98[v100[(233 -(19 + 211)) -(114 -(88 + 25)) ]]=v40(v89[v100[7 -4 ]],nil,v80);end v92=v92 + 1 + 0 ;break;end if (v125==(0 + 0 + (1036 -(1007 + 29)))) then local v141=0 + 0 ;while true do if (v141==(0 -0)) then v100=v88[v92];v101=v100[(4 -3) + 0 ];v141=1;end if (v141==(1 + 0)) then v125=(812 -(340 + 471)) + (0 -0) ;break;end end end end end break;end if (v87==(593 -(276 + 313))) then v99=(v96-v90) + (2 -(2 -1)) ;v100=nil;v101=nil;v87=5;end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
